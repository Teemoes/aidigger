原始数据为买家行为信息，转换为六维数聚集X，其维度分别为买家ID，商品信息，浏览参数，收藏参数，推荐参数和购买参数。
选取每个头部商家的一定量顾客的行为信息，形成固定质心。
通过K近邻法，将待测输入依次或分批次，输入模型，寻找他的“近邻”，则该近邻则为对应商家。
再将买家ID推荐给商家即可。KNN.py作为算法样本，展示了这一过程。

但是，以上方法有一些问题，如果商家经营类型相同，那么应该推荐相似的顾客，所以同理要对商家进行聚类分析。
但同时，相同类型的商家会得到相同的顾客，顾客有一定的品牌忠诚度，或者购买过某商家商品没有优先级推荐，双方都不乐意接受这种方案。
目前的神经网络(GoogLeNet-v4)Top-1错误率在20%以下，Top-5错误率在5%以下。
同样，将每个商家的一定量顾客的行为信息座位验证集，将剩余行为信息作为训练集，将商家作为分类类别。
经过神经网络训练，每条行为信息的TOP-5作为买家对应商家。将浏览参数，收藏参数，推荐参数、购买参数以及TOP-5商家的对应概率，设定相应的权重，计算出推荐指数。
选取推荐指数最高的买家（去除重复）作为商家推荐用户。


附加问题:
1.目前主要研读
[1] Thomas W. Miller. 预测分析模型[M]. 北京：机械工业出版社，2016.09
[2]焦李成等. 深度学习、优化与识别[M]. 北京：清华大学出版社，2017.07
以及关于GoogLeNet和网络优化的论文。

2.遇到问题主要在arXiv.org上寻找相关论文，在github上查找相关代码，在CSND理解相关算法、细节。
